== Physical Plan ==
TakeOrderedAndProject (265)
+- * HashAggregate (264)
   +- Exchange (263)
      +- * HashAggregate (262)
         +- Union (261)
            :- * HashAggregate (102)
            :  +- Exchange (101)
            :     +- * HashAggregate (100)
            :        +- Union (99)
            :           :- * HashAggregate (38)
            :           :  +- Exchange (37)
            :           :     +- * HashAggregate (36)
            :           :        +- * Project (35)
            :           :           +- * BroadcastHashJoin Inner BuildRight (34)
            :           :              :- * Project (28)
            :           :              :  +- * BroadcastHashJoin Inner BuildRight (27)
            :           :              :     :- * Project (21)
            :           :              :     :  +- * BroadcastHashJoin Inner BuildRight (20)
            :           :              :     :     :- * Project (15)
            :           :              :     :     :  +- * BroadcastHashJoin Inner BuildRight (14)
            :           :              :     :     :     :- * ColumnarToRow (12)
            :           :              :     :     :     :  +- CometProject (11)
            :           :              :     :     :     :     +- CometSortMergeJoin (10)
            :           :              :     :     :     :        :- CometSort (4)
            :           :              :     :     :     :        :  +- CometExchange (3)
            :           :              :     :     :     :        :     +- CometFilter (2)
            :           :              :     :     :     :        :        +- CometScan parquet spark_catalog.default.store_sales (1)
            :           :              :     :     :     :        +- CometSort (9)
            :           :              :     :     :     :           +- CometExchange (8)
            :           :              :     :     :     :              +- CometProject (7)
            :           :              :     :     :     :                 +- CometFilter (6)
            :           :              :     :     :     :                    +- CometScan parquet spark_catalog.default.store_returns (5)
            :           :              :     :     :     +- ReusedExchange (13)
            :           :              :     :     +- BroadcastExchange (19)
            :           :              :     :        +- * ColumnarToRow (18)
            :           :              :     :           +- CometFilter (17)
            :           :              :     :              +- CometScan parquet spark_catalog.default.store (16)
            :           :              :     +- BroadcastExchange (26)
            :           :              :        +- * ColumnarToRow (25)
            :           :              :           +- CometProject (24)
            :           :              :              +- CometFilter (23)
            :           :              :                 +- CometScan parquet spark_catalog.default.item (22)
            :           :              +- BroadcastExchange (33)
            :           :                 +- * ColumnarToRow (32)
            :           :                    +- CometProject (31)
            :           :                       +- CometFilter (30)
            :           :                          +- CometScan parquet spark_catalog.default.promotion (29)
            :           :- * HashAggregate (68)
            :           :  +- Exchange (67)
            :           :     +- * HashAggregate (66)
            :           :        +- * Project (65)
            :           :           +- * BroadcastHashJoin Inner BuildRight (64)
            :           :              :- * Project (62)
            :           :              :  +- * BroadcastHashJoin Inner BuildRight (61)
            :           :              :     :- * Project (59)
            :           :              :     :  +- * BroadcastHashJoin Inner BuildRight (58)
            :           :              :     :     :- * Project (53)
            :           :              :     :     :  +- * BroadcastHashJoin Inner BuildRight (52)
            :           :              :     :     :     :- * ColumnarToRow (50)
            :           :              :     :     :     :  +- CometProject (49)
            :           :              :     :     :     :     +- CometSortMergeJoin (48)
            :           :              :     :     :     :        :- CometSort (42)
            :           :              :     :     :     :        :  +- CometExchange (41)
            :           :              :     :     :     :        :     +- CometFilter (40)
            :           :              :     :     :     :        :        +- CometScan parquet spark_catalog.default.catalog_sales (39)
            :           :              :     :     :     :        +- CometSort (47)
            :           :              :     :     :     :           +- CometExchange (46)
            :           :              :     :     :     :              +- CometProject (45)
            :           :              :     :     :     :                 +- CometFilter (44)
            :           :              :     :     :     :                    +- CometScan parquet spark_catalog.default.catalog_returns (43)
            :           :              :     :     :     +- ReusedExchange (51)
            :           :              :     :     +- BroadcastExchange (57)
            :           :              :     :        +- * ColumnarToRow (56)
            :           :              :     :           +- CometFilter (55)
            :           :              :     :              +- CometScan parquet spark_catalog.default.catalog_page (54)
            :           :              :     +- ReusedExchange (60)
            :           :              +- ReusedExchange (63)
            :           +- * HashAggregate (98)
            :              +- Exchange (97)
            :                 +- * HashAggregate (96)
            :                    +- * Project (95)
            :                       +- * BroadcastHashJoin Inner BuildRight (94)
            :                          :- * Project (92)
            :                          :  +- * BroadcastHashJoin Inner BuildRight (91)
            :                          :     :- * Project (89)
            :                          :     :  +- * BroadcastHashJoin Inner BuildRight (88)
            :                          :     :     :- * Project (83)
            :                          :     :     :  +- * BroadcastHashJoin Inner BuildRight (82)
            :                          :     :     :     :- * ColumnarToRow (80)
            :                          :     :     :     :  +- CometProject (79)
            :                          :     :     :     :     +- CometSortMergeJoin (78)
            :                          :     :     :     :        :- CometSort (72)
            :                          :     :     :     :        :  +- CometExchange (71)
            :                          :     :     :     :        :     +- CometFilter (70)
            :                          :     :     :     :        :        +- CometScan parquet spark_catalog.default.web_sales (69)
            :                          :     :     :     :        +- CometSort (77)
            :                          :     :     :     :           +- CometExchange (76)
            :                          :     :     :     :              +- CometProject (75)
            :                          :     :     :     :                 +- CometFilter (74)
            :                          :     :     :     :                    +- CometScan parquet spark_catalog.default.web_returns (73)
            :                          :     :     :     +- ReusedExchange (81)
            :                          :     :     +- BroadcastExchange (87)
            :                          :     :        +- * ColumnarToRow (86)
            :                          :     :           +- CometFilter (85)
            :                          :     :              +- CometScan parquet spark_catalog.default.web_site (84)
            :                          :     +- ReusedExchange (90)
            :                          +- ReusedExchange (93)
            :- * HashAggregate (181)
            :  +- Exchange (180)
            :     +- * HashAggregate (179)
            :        +- * HashAggregate (178)
            :           +- Exchange (177)
            :              +- * HashAggregate (176)
            :                 +- Union (175)
            :                    :- * HashAggregate (126)
            :                    :  +- Exchange (125)
            :                    :     +- * HashAggregate (124)
            :                    :        +- * Project (123)
            :                    :           +- * BroadcastHashJoin Inner BuildRight (122)
            :                    :              :- * Project (120)
            :                    :              :  +- * BroadcastHashJoin Inner BuildRight (119)
            :                    :              :     :- * Project (117)
            :                    :              :     :  +- * BroadcastHashJoin Inner BuildRight (116)
            :                    :              :     :     :- * Project (114)
            :                    :              :     :     :  +- * BroadcastHashJoin Inner BuildRight (113)
            :                    :              :     :     :     :- * ColumnarToRow (111)
            :                    :              :     :     :     :  +- CometProject (110)
            :                    :              :     :     :     :     +- CometSortMergeJoin (109)
            :                    :              :     :     :     :        :- CometSort (106)
            :                    :              :     :     :     :        :  +- CometExchange (105)
            :                    :              :     :     :     :        :     +- CometFilter (104)
            :                    :              :     :     :     :        :        +- CometScan parquet spark_catalog.default.store_sales (103)
            :                    :              :     :     :     :        +- CometSort (108)
            :                    :              :     :     :     :           +- ReusedExchange (107)
            :                    :              :     :     :     +- ReusedExchange (112)
            :                    :              :     :     +- ReusedExchange (115)
            :                    :              :     +- ReusedExchange (118)
            :                    :              +- ReusedExchange (121)
            :                    :- * HashAggregate (150)
            :                    :  +- Exchange (149)
            :                    :     +- * HashAggregate (148)
            :                    :        +- * Project (147)
            :                    :           +- * BroadcastHashJoin Inner BuildRight (146)
            :                    :              :- * Project (144)
            :                    :              :  +- * BroadcastHashJoin Inner BuildRight (143)
            :                    :              :     :- * Project (141)
            :                    :              :     :  +- * BroadcastHashJoin Inner BuildRight (140)
            :                    :              :     :     :- * Project (138)
            :                    :              :     :     :  +- * BroadcastHashJoin Inner BuildRight (137)
            :                    :              :     :     :     :- * ColumnarToRow (135)
            :                    :              :     :     :     :  +- CometProject (134)
            :                    :              :     :     :     :     +- CometSortMergeJoin (133)
            :                    :              :     :     :     :        :- CometSort (130)
            :                    :              :     :     :     :        :  +- CometExchange (129)
            :                    :              :     :     :     :        :     +- CometFilter (128)
            :                    :              :     :     :     :        :        +- CometScan parquet spark_catalog.default.catalog_sales (127)
            :                    :              :     :     :     :        +- CometSort (132)
            :                    :              :     :     :     :           +- ReusedExchange (131)
            :                    :              :     :     :     +- ReusedExchange (136)
            :                    :              :     :     +- ReusedExchange (139)
            :                    :              :     +- ReusedExchange (142)
            :                    :              +- ReusedExchange (145)
            :                    +- * HashAggregate (174)
            :                       +- Exchange (173)
            :                          +- * HashAggregate (172)
            :                             +- * Project (171)
            :                                +- * BroadcastHashJoin Inner BuildRight (170)
            :                                   :- * Project (168)
            :                                   :  +- * BroadcastHashJoin Inner BuildRight (167)
            :                                   :     :- * Project (165)
            :                                   :     :  +- * BroadcastHashJoin Inner BuildRight (164)
            :                                   :     :     :- * Project (162)
            :                                   :     :     :  +- * BroadcastHashJoin Inner BuildRight (161)
            :                                   :     :     :     :- * ColumnarToRow (159)
            :                                   :     :     :     :  +- CometProject (158)
            :                                   :     :     :     :     +- CometSortMergeJoin (157)
            :                                   :     :     :     :        :- CometSort (154)
            :                                   :     :     :     :        :  +- CometExchange (153)
            :                                   :     :     :     :        :     +- CometFilter (152)
            :                                   :     :     :     :        :        +- CometScan parquet spark_catalog.default.web_sales (151)
            :                                   :     :     :     :        +- CometSort (156)
            :                                   :     :     :     :           +- ReusedExchange (155)
            :                                   :     :     :     +- ReusedExchange (160)
            :                                   :     :     +- ReusedExchange (163)
            :                                   :     +- ReusedExchange (166)
            :                                   +- ReusedExchange (169)
            +- * HashAggregate (260)
               +- Exchange (259)
                  +- * HashAggregate (258)
                     +- * HashAggregate (257)
                        +- Exchange (256)
                           +- * HashAggregate (255)
                              +- Union (254)
                                 :- * HashAggregate (205)
                                 :  +- Exchange (204)
                                 :     +- * HashAggregate (203)
                                 :        +- * Project (202)
                                 :           +- * BroadcastHashJoin Inner BuildRight (201)
                                 :              :- * Project (199)
                                 :              :  +- * BroadcastHashJoin Inner BuildRight (198)
                                 :              :     :- * Project (196)
                                 :              :     :  +- * BroadcastHashJoin Inner BuildRight (195)
                                 :              :     :     :- * Project (193)
                                 :              :     :     :  +- * BroadcastHashJoin Inner BuildRight (192)
                                 :              :     :     :     :- * ColumnarToRow (190)
                                 :              :     :     :     :  +- CometProject (189)
                                 :              :     :     :     :     +- CometSortMergeJoin (188)
                                 :              :     :     :     :        :- CometSort (185)
                                 :              :     :     :     :        :  +- CometExchange (184)
                                 :              :     :     :     :        :     +- CometFilter (183)
                                 :              :     :     :     :        :        +- CometScan parquet spark_catalog.default.store_sales (182)
                                 :              :     :     :     :        +- CometSort (187)
                                 :              :     :     :     :           +- ReusedExchange (186)
                                 :              :     :     :     +- ReusedExchange (191)
                                 :              :     :     +- ReusedExchange (194)
                                 :              :     +- ReusedExchange (197)
                                 :              +- ReusedExchange (200)
                                 :- * HashAggregate (229)
                                 :  +- Exchange (228)
                                 :     +- * HashAggregate (227)
                                 :        +- * Project (226)
                                 :           +- * BroadcastHashJoin Inner BuildRight (225)
                                 :              :- * Project (223)
                                 :              :  +- * BroadcastHashJoin Inner BuildRight (222)
                                 :              :     :- * Project (220)
                                 :              :     :  +- * BroadcastHashJoin Inner BuildRight (219)
                                 :              :     :     :- * Project (217)
                                 :              :     :     :  +- * BroadcastHashJoin Inner BuildRight (216)
                                 :              :     :     :     :- * ColumnarToRow (214)
                                 :              :     :     :     :  +- CometProject (213)
                                 :              :     :     :     :     +- CometSortMergeJoin (212)
                                 :              :     :     :     :        :- CometSort (209)
                                 :              :     :     :     :        :  +- CometExchange (208)
                                 :              :     :     :     :        :     +- CometFilter (207)
                                 :              :     :     :     :        :        +- CometScan parquet spark_catalog.default.catalog_sales (206)
                                 :              :     :     :     :        +- CometSort (211)
                                 :              :     :     :     :           +- ReusedExchange (210)
                                 :              :     :     :     +- ReusedExchange (215)
                                 :              :     :     +- ReusedExchange (218)
                                 :              :     +- ReusedExchange (221)
                                 :              +- ReusedExchange (224)
                                 +- * HashAggregate (253)
                                    +- Exchange (252)
                                       +- * HashAggregate (251)
                                          +- * Project (250)
                                             +- * BroadcastHashJoin Inner BuildRight (249)
                                                :- * Project (247)
                                                :  +- * BroadcastHashJoin Inner BuildRight (246)
                                                :     :- * Project (244)
                                                :     :  +- * BroadcastHashJoin Inner BuildRight (243)
                                                :     :     :- * Project (241)
                                                :     :     :  +- * BroadcastHashJoin Inner BuildRight (240)
                                                :     :     :     :- * ColumnarToRow (238)
                                                :     :     :     :  +- CometProject (237)
                                                :     :     :     :     +- CometSortMergeJoin (236)
                                                :     :     :     :        :- CometSort (233)
                                                :     :     :     :        :  +- CometExchange (232)
                                                :     :     :     :        :     +- CometFilter (231)
                                                :     :     :     :        :        +- CometScan parquet spark_catalog.default.web_sales (230)
                                                :     :     :     :        +- CometSort (235)
                                                :     :     :     :           +- ReusedExchange (234)
                                                :     :     :     +- ReusedExchange (239)
                                                :     :     +- ReusedExchange (242)
                                                :     +- ReusedExchange (245)
                                                +- ReusedExchange (248)


(unknown) Scan parquet spark_catalog.default.store_sales
Output [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#7), dynamicpruningexpression(ss_sold_date_sk#7 IN dynamicpruning#8)]
PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_item_sk), IsNotNull(ss_promo_sk)]
ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>

(2) CometFilter
Input [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]
Condition : ((isnotnull(ss_store_sk#2) AND isnotnull(ss_item_sk#1)) AND isnotnull(ss_promo_sk#3))

(3) CometExchange
Input [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]
Arguments: hashpartitioning(ss_item_sk#1, ss_ticket_number#4, 5), Exchange hashpartitioning(ss_item_sk#1, ss_ticket_number#4, 5), ENSURE_REQUIREMENTS, [plan_id=1], ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(4) CometSort
Input [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]
Arguments: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7], [ss_item_sk#1 ASC NULLS FIRST, ss_ticket_number#4 ASC NULLS FIRST]

(unknown) Scan parquet spark_catalog.default.store_returns
Output [5]: [sr_item_sk#9, sr_ticket_number#10, sr_return_amt#11, sr_net_loss#12, sr_returned_date_sk#13]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_returns]
PushedFilters: [IsNotNull(sr_item_sk), IsNotNull(sr_ticket_number)]
ReadSchema: struct<sr_item_sk:int,sr_ticket_number:int,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>

(6) CometFilter
Input [5]: [sr_item_sk#9, sr_ticket_number#10, sr_return_amt#11, sr_net_loss#12, sr_returned_date_sk#13]
Condition : (isnotnull(sr_item_sk#9) AND isnotnull(sr_ticket_number#10))

(7) CometProject
Input [5]: [sr_item_sk#9, sr_ticket_number#10, sr_return_amt#11, sr_net_loss#12, sr_returned_date_sk#13]
Arguments: [sr_item_sk#9, sr_ticket_number#10, sr_return_amt#11, sr_net_loss#12], [sr_item_sk#9, sr_ticket_number#10, sr_return_amt#11, sr_net_loss#12]

(8) CometExchange
Input [4]: [sr_item_sk#9, sr_ticket_number#10, sr_return_amt#11, sr_net_loss#12]
Arguments: hashpartitioning(sr_item_sk#9, sr_ticket_number#10, 5), Exchange hashpartitioning(sr_item_sk#9, sr_ticket_number#10, 5), ENSURE_REQUIREMENTS, [plan_id=3], ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(9) CometSort
Input [4]: [sr_item_sk#9, sr_ticket_number#10, sr_return_amt#11, sr_net_loss#12]
Arguments: [sr_item_sk#9, sr_ticket_number#10, sr_return_amt#11, sr_net_loss#12], [sr_item_sk#9 ASC NULLS FIRST, sr_ticket_number#10 ASC NULLS FIRST]

(10) CometSortMergeJoin
Left output [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]
Right output [4]: [sr_item_sk#9, sr_ticket_number#10, sr_return_amt#11, sr_net_loss#12]
Arguments: [ss_item_sk#1, ss_ticket_number#4], [sr_item_sk#9, sr_ticket_number#10], LeftOuter

(11) CometProject
Input [11]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7, sr_item_sk#9, sr_ticket_number#10, sr_return_amt#11, sr_net_loss#12]
Arguments: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7, sr_return_amt#11, sr_net_loss#12], [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7, sr_return_amt#11, sr_net_loss#12]

(12) ColumnarToRow [codegen id : 5]
Input [8]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7, sr_return_amt#11, sr_net_loss#12]

(13) ReusedExchange [Reuses operator id: 270]
Output [1]: [d_date_sk#14]

(14) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ss_sold_date_sk#7]
Right keys [1]: [d_date_sk#14]
Join type: Inner
Join condition: None

(15) Project [codegen id : 5]
Output [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12]
Input [9]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7, sr_return_amt#11, sr_net_loss#12, d_date_sk#14]

(unknown) Scan parquet spark_catalog.default.store
Output [2]: [s_store_sk#15, s_store_id#16]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_store_id:string>

(17) CometFilter
Input [2]: [s_store_sk#15, s_store_id#16]
Condition : isnotnull(s_store_sk#15)

(18) ColumnarToRow [codegen id : 2]
Input [2]: [s_store_sk#15, s_store_id#16]

(19) BroadcastExchange
Input [2]: [s_store_sk#15, s_store_id#16]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=5]

(20) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ss_store_sk#2]
Right keys [1]: [s_store_sk#15]
Join type: Inner
Join condition: None

(21) Project [codegen id : 5]
Output [7]: [ss_item_sk#1, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_id#16]
Input [9]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_sk#15, s_store_id#16]

(unknown) Scan parquet spark_catalog.default.item
Output [2]: [i_item_sk#17, i_current_price#18]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_current_price), GreaterThan(i_current_price,50.00), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2)>

(23) CometFilter
Input [2]: [i_item_sk#17, i_current_price#18]
Condition : ((isnotnull(i_current_price#18) AND (i_current_price#18 > 50.00)) AND isnotnull(i_item_sk#17))

(24) CometProject
Input [2]: [i_item_sk#17, i_current_price#18]
Arguments: [i_item_sk#17], [i_item_sk#17]

(25) ColumnarToRow [codegen id : 3]
Input [1]: [i_item_sk#17]

(26) BroadcastExchange
Input [1]: [i_item_sk#17]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6]

(27) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ss_item_sk#1]
Right keys [1]: [i_item_sk#17]
Join type: Inner
Join condition: None

(28) Project [codegen id : 5]
Output [6]: [ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_id#16]
Input [8]: [ss_item_sk#1, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_id#16, i_item_sk#17]

(unknown) Scan parquet spark_catalog.default.promotion
Output [2]: [p_promo_sk#19, p_channel_tv#20]
Batched: true
Location [not included in comparison]/{warehouse_dir}/promotion]
PushedFilters: [IsNotNull(p_channel_tv), EqualTo(p_channel_tv,N), IsNotNull(p_promo_sk)]
ReadSchema: struct<p_promo_sk:int,p_channel_tv:string>

(30) CometFilter
Input [2]: [p_promo_sk#19, p_channel_tv#20]
Condition : ((isnotnull(p_channel_tv#20) AND (p_channel_tv#20 = N)) AND isnotnull(p_promo_sk#19))

(31) CometProject
Input [2]: [p_promo_sk#19, p_channel_tv#20]
Arguments: [p_promo_sk#19], [p_promo_sk#19]

(32) ColumnarToRow [codegen id : 4]
Input [1]: [p_promo_sk#19]

(33) BroadcastExchange
Input [1]: [p_promo_sk#19]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=7]

(34) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ss_promo_sk#3]
Right keys [1]: [p_promo_sk#19]
Join type: Inner
Join condition: None

(35) Project [codegen id : 5]
Output [5]: [ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_id#16]
Input [7]: [ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_id#16, p_promo_sk#19]

(36) HashAggregate [codegen id : 5]
Input [5]: [ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_id#16]
Keys [1]: [s_store_id#16]
Functions [3]: [partial_sum(UnscaledValue(ss_ext_sales_price#5)), partial_sum(coalesce(cast(sr_return_amt#11 as decimal(12,2)), 0.00)), partial_sum((ss_net_profit#6 - coalesce(cast(sr_net_loss#12 as decimal(12,2)), 0.00)))]
Aggregate Attributes [5]: [sum#21, sum#22, isEmpty#23, sum#24, isEmpty#25]
Results [6]: [s_store_id#16, sum#26, sum#27, isEmpty#28, sum#29, isEmpty#30]

(37) Exchange
Input [6]: [s_store_id#16, sum#26, sum#27, isEmpty#28, sum#29, isEmpty#30]
Arguments: hashpartitioning(s_store_id#16, 5), ENSURE_REQUIREMENTS, [plan_id=8]

(38) HashAggregate [codegen id : 6]
Input [6]: [s_store_id#16, sum#26, sum#27, isEmpty#28, sum#29, isEmpty#30]
Keys [1]: [s_store_id#16]
Functions [3]: [sum(UnscaledValue(ss_ext_sales_price#5)), sum(coalesce(cast(sr_return_amt#11 as decimal(12,2)), 0.00)), sum((ss_net_profit#6 - coalesce(cast(sr_net_loss#12 as decimal(12,2)), 0.00)))]
Aggregate Attributes [3]: [sum(UnscaledValue(ss_ext_sales_price#5))#31, sum(coalesce(cast(sr_return_amt#11 as decimal(12,2)), 0.00))#32, sum((ss_net_profit#6 - coalesce(cast(sr_net_loss#12 as decimal(12,2)), 0.00)))#33]
Results [5]: [store channel AS channel#34, concat(store, s_store_id#16) AS id#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#5))#31,17,2) AS sales#36, sum(coalesce(cast(sr_return_amt#11 as decimal(12,2)), 0.00))#32 AS returns#37, sum((ss_net_profit#6 - coalesce(cast(sr_net_loss#12 as decimal(12,2)), 0.00)))#33 AS profit#38]

(unknown) Scan parquet spark_catalog.default.catalog_sales
Output [7]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#45), dynamicpruningexpression(cs_sold_date_sk#45 IN dynamicpruning#46)]
PushedFilters: [IsNotNull(cs_catalog_page_sk), IsNotNull(cs_item_sk), IsNotNull(cs_promo_sk)]
ReadSchema: struct<cs_catalog_page_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:decimal(7,2)>

(40) CometFilter
Input [7]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45]
Condition : ((isnotnull(cs_catalog_page_sk#39) AND isnotnull(cs_item_sk#40)) AND isnotnull(cs_promo_sk#41))

(41) CometExchange
Input [7]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45]
Arguments: hashpartitioning(cs_item_sk#40, cs_order_number#42, 5), Exchange hashpartitioning(cs_item_sk#40, cs_order_number#42, 5), ENSURE_REQUIREMENTS, [plan_id=9], ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=10]

(42) CometSort
Input [7]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45]
Arguments: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45], [cs_item_sk#40 ASC NULLS FIRST, cs_order_number#42 ASC NULLS FIRST]

(unknown) Scan parquet spark_catalog.default.catalog_returns
Output [5]: [cr_item_sk#47, cr_order_number#48, cr_return_amount#49, cr_net_loss#50, cr_returned_date_sk#51]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_returns]
PushedFilters: [IsNotNull(cr_item_sk), IsNotNull(cr_order_number)]
ReadSchema: struct<cr_item_sk:int,cr_order_number:int,cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>

(44) CometFilter
Input [5]: [cr_item_sk#47, cr_order_number#48, cr_return_amount#49, cr_net_loss#50, cr_returned_date_sk#51]
Condition : (isnotnull(cr_item_sk#47) AND isnotnull(cr_order_number#48))

(45) CometProject
Input [5]: [cr_item_sk#47, cr_order_number#48, cr_return_amount#49, cr_net_loss#50, cr_returned_date_sk#51]
Arguments: [cr_item_sk#47, cr_order_number#48, cr_return_amount#49, cr_net_loss#50], [cr_item_sk#47, cr_order_number#48, cr_return_amount#49, cr_net_loss#50]

(46) CometExchange
Input [4]: [cr_item_sk#47, cr_order_number#48, cr_return_amount#49, cr_net_loss#50]
Arguments: hashpartitioning(cr_item_sk#47, cr_order_number#48, 5), Exchange hashpartitioning(cr_item_sk#47, cr_order_number#48, 5), ENSURE_REQUIREMENTS, [plan_id=11], ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=12]

(47) CometSort
Input [4]: [cr_item_sk#47, cr_order_number#48, cr_return_amount#49, cr_net_loss#50]
Arguments: [cr_item_sk#47, cr_order_number#48, cr_return_amount#49, cr_net_loss#50], [cr_item_sk#47 ASC NULLS FIRST, cr_order_number#48 ASC NULLS FIRST]

(48) CometSortMergeJoin
Left output [7]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45]
Right output [4]: [cr_item_sk#47, cr_order_number#48, cr_return_amount#49, cr_net_loss#50]
Arguments: [cs_item_sk#40, cs_order_number#42], [cr_item_sk#47, cr_order_number#48], LeftOuter

(49) CometProject
Input [11]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45, cr_item_sk#47, cr_order_number#48, cr_return_amount#49, cr_net_loss#50]
Arguments: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45, cr_return_amount#49, cr_net_loss#50], [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45, cr_return_amount#49, cr_net_loss#50]

(50) ColumnarToRow [codegen id : 11]
Input [8]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45, cr_return_amount#49, cr_net_loss#50]

(51) ReusedExchange [Reuses operator id: 270]
Output [1]: [d_date_sk#52]

(52) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_sold_date_sk#45]
Right keys [1]: [d_date_sk#52]
Join type: Inner
Join condition: None

(53) Project [codegen id : 11]
Output [7]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50]
Input [9]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45, cr_return_amount#49, cr_net_loss#50, d_date_sk#52]

(unknown) Scan parquet spark_catalog.default.catalog_page
Output [2]: [cp_catalog_page_sk#53, cp_catalog_page_id#54]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_page]
PushedFilters: [IsNotNull(cp_catalog_page_sk)]
ReadSchema: struct<cp_catalog_page_sk:int,cp_catalog_page_id:string>

(55) CometFilter
Input [2]: [cp_catalog_page_sk#53, cp_catalog_page_id#54]
Condition : isnotnull(cp_catalog_page_sk#53)

(56) ColumnarToRow [codegen id : 8]
Input [2]: [cp_catalog_page_sk#53, cp_catalog_page_id#54]

(57) BroadcastExchange
Input [2]: [cp_catalog_page_sk#53, cp_catalog_page_id#54]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=13]

(58) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_catalog_page_sk#39]
Right keys [1]: [cp_catalog_page_sk#53]
Join type: Inner
Join condition: None

(59) Project [codegen id : 11]
Output [7]: [cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_id#54]
Input [9]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_sk#53, cp_catalog_page_id#54]

(60) ReusedExchange [Reuses operator id: 26]
Output [1]: [i_item_sk#55]

(61) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_item_sk#40]
Right keys [1]: [i_item_sk#55]
Join type: Inner
Join condition: None

(62) Project [codegen id : 11]
Output [6]: [cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_id#54]
Input [8]: [cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_id#54, i_item_sk#55]

(63) ReusedExchange [Reuses operator id: 33]
Output [1]: [p_promo_sk#56]

(64) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_promo_sk#41]
Right keys [1]: [p_promo_sk#56]
Join type: Inner
Join condition: None

(65) Project [codegen id : 11]
Output [5]: [cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_id#54]
Input [7]: [cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_id#54, p_promo_sk#56]

(66) HashAggregate [codegen id : 11]
Input [5]: [cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_id#54]
Keys [1]: [cp_catalog_page_id#54]
Functions [3]: [partial_sum(UnscaledValue(cs_ext_sales_price#43)), partial_sum(coalesce(cast(cr_return_amount#49 as decimal(12,2)), 0.00)), partial_sum((cs_net_profit#44 - coalesce(cast(cr_net_loss#50 as decimal(12,2)), 0.00)))]
Aggregate Attributes [5]: [sum#57, sum#58, isEmpty#59, sum#60, isEmpty#61]
Results [6]: [cp_catalog_page_id#54, sum#62, sum#63, isEmpty#64, sum#65, isEmpty#66]

(67) Exchange
Input [6]: [cp_catalog_page_id#54, sum#62, sum#63, isEmpty#64, sum#65, isEmpty#66]
Arguments: hashpartitioning(cp_catalog_page_id#54, 5), ENSURE_REQUIREMENTS, [plan_id=14]

(68) HashAggregate [codegen id : 12]
Input [6]: [cp_catalog_page_id#54, sum#62, sum#63, isEmpty#64, sum#65, isEmpty#66]
Keys [1]: [cp_catalog_page_id#54]
Functions [3]: [sum(UnscaledValue(cs_ext_sales_price#43)), sum(coalesce(cast(cr_return_amount#49 as decimal(12,2)), 0.00)), sum((cs_net_profit#44 - coalesce(cast(cr_net_loss#50 as decimal(12,2)), 0.00)))]
Aggregate Attributes [3]: [sum(UnscaledValue(cs_ext_sales_price#43))#67, sum(coalesce(cast(cr_return_amount#49 as decimal(12,2)), 0.00))#68, sum((cs_net_profit#44 - coalesce(cast(cr_net_loss#50 as decimal(12,2)), 0.00)))#69]
Results [5]: [catalog channel AS channel#70, concat(catalog_page, cp_catalog_page_id#54) AS id#71, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#43))#67,17,2) AS sales#72, sum(coalesce(cast(cr_return_amount#49 as decimal(12,2)), 0.00))#68 AS returns#73, sum((cs_net_profit#44 - coalesce(cast(cr_net_loss#50 as decimal(12,2)), 0.00)))#69 AS profit#74]

(unknown) Scan parquet spark_catalog.default.web_sales
Output [7]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#81), dynamicpruningexpression(ws_sold_date_sk#81 IN dynamicpruning#82)]
PushedFilters: [IsNotNull(ws_web_site_sk), IsNotNull(ws_item_sk), IsNotNull(ws_promo_sk)]
ReadSchema: struct<ws_item_sk:int,ws_web_site_sk:int,ws_promo_sk:int,ws_order_number:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decimal(7,2)>

(70) CometFilter
Input [7]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81]
Condition : ((isnotnull(ws_web_site_sk#76) AND isnotnull(ws_item_sk#75)) AND isnotnull(ws_promo_sk#77))

(71) CometExchange
Input [7]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81]
Arguments: hashpartitioning(ws_item_sk#75, ws_order_number#78, 5), Exchange hashpartitioning(ws_item_sk#75, ws_order_number#78, 5), ENSURE_REQUIREMENTS, [plan_id=15], ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=16]

(72) CometSort
Input [7]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81]
Arguments: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81], [ws_item_sk#75 ASC NULLS FIRST, ws_order_number#78 ASC NULLS FIRST]

(unknown) Scan parquet spark_catalog.default.web_returns
Output [5]: [wr_item_sk#83, wr_order_number#84, wr_return_amt#85, wr_net_loss#86, wr_returned_date_sk#87]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_returns]
PushedFilters: [IsNotNull(wr_item_sk), IsNotNull(wr_order_number)]
ReadSchema: struct<wr_item_sk:int,wr_order_number:int,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>

(74) CometFilter
Input [5]: [wr_item_sk#83, wr_order_number#84, wr_return_amt#85, wr_net_loss#86, wr_returned_date_sk#87]
Condition : (isnotnull(wr_item_sk#83) AND isnotnull(wr_order_number#84))

(75) CometProject
Input [5]: [wr_item_sk#83, wr_order_number#84, wr_return_amt#85, wr_net_loss#86, wr_returned_date_sk#87]
Arguments: [wr_item_sk#83, wr_order_number#84, wr_return_amt#85, wr_net_loss#86], [wr_item_sk#83, wr_order_number#84, wr_return_amt#85, wr_net_loss#86]

(76) CometExchange
Input [4]: [wr_item_sk#83, wr_order_number#84, wr_return_amt#85, wr_net_loss#86]
Arguments: hashpartitioning(wr_item_sk#83, wr_order_number#84, 5), Exchange hashpartitioning(wr_item_sk#83, wr_order_number#84, 5), ENSURE_REQUIREMENTS, [plan_id=17], ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=18]

(77) CometSort
Input [4]: [wr_item_sk#83, wr_order_number#84, wr_return_amt#85, wr_net_loss#86]
Arguments: [wr_item_sk#83, wr_order_number#84, wr_return_amt#85, wr_net_loss#86], [wr_item_sk#83 ASC NULLS FIRST, wr_order_number#84 ASC NULLS FIRST]

(78) CometSortMergeJoin
Left output [7]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81]
Right output [4]: [wr_item_sk#83, wr_order_number#84, wr_return_amt#85, wr_net_loss#86]
Arguments: [ws_item_sk#75, ws_order_number#78], [wr_item_sk#83, wr_order_number#84], LeftOuter

(79) CometProject
Input [11]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81, wr_item_sk#83, wr_order_number#84, wr_return_amt#85, wr_net_loss#86]
Arguments: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81, wr_return_amt#85, wr_net_loss#86], [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81, wr_return_amt#85, wr_net_loss#86]

(80) ColumnarToRow [codegen id : 17]
Input [8]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81, wr_return_amt#85, wr_net_loss#86]

(81) ReusedExchange [Reuses operator id: 270]
Output [1]: [d_date_sk#88]

(82) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_sold_date_sk#81]
Right keys [1]: [d_date_sk#88]
Join type: Inner
Join condition: None

(83) Project [codegen id : 17]
Output [7]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86]
Input [9]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81, wr_return_amt#85, wr_net_loss#86, d_date_sk#88]

(unknown) Scan parquet spark_catalog.default.web_site
Output [2]: [web_site_sk#89, web_site_id#90]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_site]
PushedFilters: [IsNotNull(web_site_sk)]
ReadSchema: struct<web_site_sk:int,web_site_id:string>

(85) CometFilter
Input [2]: [web_site_sk#89, web_site_id#90]
Condition : isnotnull(web_site_sk#89)

(86) ColumnarToRow [codegen id : 14]
Input [2]: [web_site_sk#89, web_site_id#90]

(87) BroadcastExchange
Input [2]: [web_site_sk#89, web_site_id#90]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=19]

(88) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_web_site_sk#76]
Right keys [1]: [web_site_sk#89]
Join type: Inner
Join condition: None

(89) Project [codegen id : 17]
Output [7]: [ws_item_sk#75, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_id#90]
Input [9]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_sk#89, web_site_id#90]

(90) ReusedExchange [Reuses operator id: 26]
Output [1]: [i_item_sk#91]

(91) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_item_sk#75]
Right keys [1]: [i_item_sk#91]
Join type: Inner
Join condition: None

(92) Project [codegen id : 17]
Output [6]: [ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_id#90]
Input [8]: [ws_item_sk#75, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_id#90, i_item_sk#91]

(93) ReusedExchange [Reuses operator id: 33]
Output [1]: [p_promo_sk#92]

(94) BroadcastHashJoin [codegen id : 17]
Left keys [1]: [ws_promo_sk#77]
Right keys [1]: [p_promo_sk#92]
Join type: Inner
Join condition: None

(95) Project [codegen id : 17]
Output [5]: [ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_id#90]
Input [7]: [ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_id#90, p_promo_sk#92]

(96) HashAggregate [codegen id : 17]
Input [5]: [ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_id#90]
Keys [1]: [web_site_id#90]
Functions [3]: [partial_sum(UnscaledValue(ws_ext_sales_price#79)), partial_sum(coalesce(cast(wr_return_amt#85 as decimal(12,2)), 0.00)), partial_sum((ws_net_profit#80 - coalesce(cast(wr_net_loss#86 as decimal(12,2)), 0.00)))]
Aggregate Attributes [5]: [sum#93, sum#94, isEmpty#95, sum#96, isEmpty#97]
Results [6]: [web_site_id#90, sum#98, sum#99, isEmpty#100, sum#101, isEmpty#102]

(97) Exchange
Input [6]: [web_site_id#90, sum#98, sum#99, isEmpty#100, sum#101, isEmpty#102]
Arguments: hashpartitioning(web_site_id#90, 5), ENSURE_REQUIREMENTS, [plan_id=20]

(98) HashAggregate [codegen id : 18]
Input [6]: [web_site_id#90, sum#98, sum#99, isEmpty#100, sum#101, isEmpty#102]
Keys [1]: [web_site_id#90]
Functions [3]: [sum(UnscaledValue(ws_ext_sales_price#79)), sum(coalesce(cast(wr_return_amt#85 as decimal(12,2)), 0.00)), sum((ws_net_profit#80 - coalesce(cast(wr_net_loss#86 as decimal(12,2)), 0.00)))]
Aggregate Attributes [3]: [sum(UnscaledValue(ws_ext_sales_price#79))#103, sum(coalesce(cast(wr_return_amt#85 as decimal(12,2)), 0.00))#104, sum((ws_net_profit#80 - coalesce(cast(wr_net_loss#86 as decimal(12,2)), 0.00)))#105]
Results [5]: [web channel AS channel#106, concat(web_site, web_site_id#90) AS id#107, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#79))#103,17,2) AS sales#108, sum(coalesce(cast(wr_return_amt#85 as decimal(12,2)), 0.00))#104 AS returns#109, sum((ws_net_profit#80 - coalesce(cast(wr_net_loss#86 as decimal(12,2)), 0.00)))#105 AS profit#110]

(99) Union

(100) HashAggregate [codegen id : 19]
Input [5]: [channel#34, id#35, sales#36, returns#37, profit#38]
Keys [2]: [channel#34, id#35]
Functions [3]: [partial_sum(sales#36), partial_sum(returns#37), partial_sum(profit#38)]
Aggregate Attributes [6]: [sum#111, isEmpty#112, sum#113, isEmpty#114, sum#115, isEmpty#116]
Results [8]: [channel#34, id#35, sum#117, isEmpty#118, sum#119, isEmpty#120, sum#121, isEmpty#122]

(101) Exchange
Input [8]: [channel#34, id#35, sum#117, isEmpty#118, sum#119, isEmpty#120, sum#121, isEmpty#122]
Arguments: hashpartitioning(channel#34, id#35, 5), ENSURE_REQUIREMENTS, [plan_id=21]

(102) HashAggregate [codegen id : 20]
Input [8]: [channel#34, id#35, sum#117, isEmpty#118, sum#119, isEmpty#120, sum#121, isEmpty#122]
Keys [2]: [channel#34, id#35]
Functions [3]: [sum(sales#36), sum(returns#37), sum(profit#38)]
Aggregate Attributes [3]: [sum(sales#36)#123, sum(returns#37)#124, sum(profit#38)#125]
Results [5]: [channel#34, id#35, cast(sum(sales#36)#123 as decimal(37,2)) AS sales#126, cast(sum(returns#37)#124 as decimal(38,2)) AS returns#127, cast(sum(profit#38)#125 as decimal(38,2)) AS profit#128]

(unknown) Scan parquet spark_catalog.default.store_sales
Output [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#7), dynamicpruningexpression(ss_sold_date_sk#7 IN dynamicpruning#129)]
PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_item_sk), IsNotNull(ss_promo_sk)]
ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>

(104) CometFilter
Input [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]
Condition : ((isnotnull(ss_store_sk#2) AND isnotnull(ss_item_sk#1)) AND isnotnull(ss_promo_sk#3))

(105) CometExchange
Input [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]
Arguments: hashpartitioning(ss_item_sk#1, ss_ticket_number#4, 5), Exchange hashpartitioning(ss_item_sk#1, ss_ticket_number#4, 5), ENSURE_REQUIREMENTS, [plan_id=22], ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=23]

(106) CometSort
Input [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]
Arguments: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7], [ss_item_sk#1 ASC NULLS FIRST, ss_ticket_number#4 ASC NULLS FIRST]

(107) ReusedExchange [Reuses operator id: 8]
Output [4]: [sr_item_sk#9, sr_ticket_number#10, sr_return_amt#11, sr_net_loss#12]

(108) CometSort
Input [4]: [sr_item_sk#9, sr_ticket_number#10, sr_return_amt#11, sr_net_loss#12]
Arguments: [sr_item_sk#9, sr_ticket_number#10, sr_return_amt#11, sr_net_loss#12], [sr_item_sk#9 ASC NULLS FIRST, sr_ticket_number#10 ASC NULLS FIRST]

(109) CometSortMergeJoin
Left output [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]
Right output [4]: [sr_item_sk#9, sr_ticket_number#10, sr_return_amt#11, sr_net_loss#12]
Arguments: [ss_item_sk#1, ss_ticket_number#4], [sr_item_sk#9, sr_ticket_number#10], LeftOuter

(110) CometProject
Input [11]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7, sr_item_sk#9, sr_ticket_number#10, sr_return_amt#11, sr_net_loss#12]
Arguments: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7, sr_return_amt#11, sr_net_loss#12], [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7, sr_return_amt#11, sr_net_loss#12]

(111) ColumnarToRow [codegen id : 25]
Input [8]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7, sr_return_amt#11, sr_net_loss#12]

(112) ReusedExchange [Reuses operator id: 270]
Output [1]: [d_date_sk#14]

(113) BroadcastHashJoin [codegen id : 25]
Left keys [1]: [ss_sold_date_sk#7]
Right keys [1]: [d_date_sk#14]
Join type: Inner
Join condition: None

(114) Project [codegen id : 25]
Output [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12]
Input [9]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7, sr_return_amt#11, sr_net_loss#12, d_date_sk#14]

(115) ReusedExchange [Reuses operator id: 19]
Output [2]: [s_store_sk#15, s_store_id#16]

(116) BroadcastHashJoin [codegen id : 25]
Left keys [1]: [ss_store_sk#2]
Right keys [1]: [s_store_sk#15]
Join type: Inner
Join condition: None

(117) Project [codegen id : 25]
Output [7]: [ss_item_sk#1, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_id#16]
Input [9]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_sk#15, s_store_id#16]

(118) ReusedExchange [Reuses operator id: 26]
Output [1]: [i_item_sk#17]

(119) BroadcastHashJoin [codegen id : 25]
Left keys [1]: [ss_item_sk#1]
Right keys [1]: [i_item_sk#17]
Join type: Inner
Join condition: None

(120) Project [codegen id : 25]
Output [6]: [ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_id#16]
Input [8]: [ss_item_sk#1, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_id#16, i_item_sk#17]

(121) ReusedExchange [Reuses operator id: 33]
Output [1]: [p_promo_sk#19]

(122) BroadcastHashJoin [codegen id : 25]
Left keys [1]: [ss_promo_sk#3]
Right keys [1]: [p_promo_sk#19]
Join type: Inner
Join condition: None

(123) Project [codegen id : 25]
Output [5]: [ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_id#16]
Input [7]: [ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_id#16, p_promo_sk#19]

(124) HashAggregate [codegen id : 25]
Input [5]: [ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_id#16]
Keys [1]: [s_store_id#16]
Functions [3]: [partial_sum(UnscaledValue(ss_ext_sales_price#5)), partial_sum(coalesce(cast(sr_return_amt#11 as decimal(12,2)), 0.00)), partial_sum((ss_net_profit#6 - coalesce(cast(sr_net_loss#12 as decimal(12,2)), 0.00)))]
Aggregate Attributes [5]: [sum#130, sum#131, isEmpty#132, sum#133, isEmpty#134]
Results [6]: [s_store_id#16, sum#135, sum#136, isEmpty#137, sum#138, isEmpty#139]

(125) Exchange
Input [6]: [s_store_id#16, sum#135, sum#136, isEmpty#137, sum#138, isEmpty#139]
Arguments: hashpartitioning(s_store_id#16, 5), ENSURE_REQUIREMENTS, [plan_id=24]

(126) HashAggregate [codegen id : 26]
Input [6]: [s_store_id#16, sum#135, sum#136, isEmpty#137, sum#138, isEmpty#139]
Keys [1]: [s_store_id#16]
Functions [3]: [sum(UnscaledValue(ss_ext_sales_price#5)), sum(coalesce(cast(sr_return_amt#11 as decimal(12,2)), 0.00)), sum((ss_net_profit#6 - coalesce(cast(sr_net_loss#12 as decimal(12,2)), 0.00)))]
Aggregate Attributes [3]: [sum(UnscaledValue(ss_ext_sales_price#5))#31, sum(coalesce(cast(sr_return_amt#11 as decimal(12,2)), 0.00))#32, sum((ss_net_profit#6 - coalesce(cast(sr_net_loss#12 as decimal(12,2)), 0.00)))#33]
Results [5]: [store channel AS channel#34, concat(store, s_store_id#16) AS id#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#5))#31,17,2) AS sales#36, sum(coalesce(cast(sr_return_amt#11 as decimal(12,2)), 0.00))#32 AS returns#37, sum((ss_net_profit#6 - coalesce(cast(sr_net_loss#12 as decimal(12,2)), 0.00)))#33 AS profit#38]

(unknown) Scan parquet spark_catalog.default.catalog_sales
Output [7]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#45), dynamicpruningexpression(cs_sold_date_sk#45 IN dynamicpruning#140)]
PushedFilters: [IsNotNull(cs_catalog_page_sk), IsNotNull(cs_item_sk), IsNotNull(cs_promo_sk)]
ReadSchema: struct<cs_catalog_page_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:decimal(7,2)>

(128) CometFilter
Input [7]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45]
Condition : ((isnotnull(cs_catalog_page_sk#39) AND isnotnull(cs_item_sk#40)) AND isnotnull(cs_promo_sk#41))

(129) CometExchange
Input [7]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45]
Arguments: hashpartitioning(cs_item_sk#40, cs_order_number#42, 5), Exchange hashpartitioning(cs_item_sk#40, cs_order_number#42, 5), ENSURE_REQUIREMENTS, [plan_id=25], ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=26]

(130) CometSort
Input [7]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45]
Arguments: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45], [cs_item_sk#40 ASC NULLS FIRST, cs_order_number#42 ASC NULLS FIRST]

(131) ReusedExchange [Reuses operator id: 46]
Output [4]: [cr_item_sk#47, cr_order_number#48, cr_return_amount#49, cr_net_loss#50]

(132) CometSort
Input [4]: [cr_item_sk#47, cr_order_number#48, cr_return_amount#49, cr_net_loss#50]
Arguments: [cr_item_sk#47, cr_order_number#48, cr_return_amount#49, cr_net_loss#50], [cr_item_sk#47 ASC NULLS FIRST, cr_order_number#48 ASC NULLS FIRST]

(133) CometSortMergeJoin
Left output [7]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45]
Right output [4]: [cr_item_sk#47, cr_order_number#48, cr_return_amount#49, cr_net_loss#50]
Arguments: [cs_item_sk#40, cs_order_number#42], [cr_item_sk#47, cr_order_number#48], LeftOuter

(134) CometProject
Input [11]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45, cr_item_sk#47, cr_order_number#48, cr_return_amount#49, cr_net_loss#50]
Arguments: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45, cr_return_amount#49, cr_net_loss#50], [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45, cr_return_amount#49, cr_net_loss#50]

(135) ColumnarToRow [codegen id : 31]
Input [8]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45, cr_return_amount#49, cr_net_loss#50]

(136) ReusedExchange [Reuses operator id: 270]
Output [1]: [d_date_sk#52]

(137) BroadcastHashJoin [codegen id : 31]
Left keys [1]: [cs_sold_date_sk#45]
Right keys [1]: [d_date_sk#52]
Join type: Inner
Join condition: None

(138) Project [codegen id : 31]
Output [7]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50]
Input [9]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45, cr_return_amount#49, cr_net_loss#50, d_date_sk#52]

(139) ReusedExchange [Reuses operator id: 57]
Output [2]: [cp_catalog_page_sk#53, cp_catalog_page_id#54]

(140) BroadcastHashJoin [codegen id : 31]
Left keys [1]: [cs_catalog_page_sk#39]
Right keys [1]: [cp_catalog_page_sk#53]
Join type: Inner
Join condition: None

(141) Project [codegen id : 31]
Output [7]: [cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_id#54]
Input [9]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_sk#53, cp_catalog_page_id#54]

(142) ReusedExchange [Reuses operator id: 26]
Output [1]: [i_item_sk#55]

(143) BroadcastHashJoin [codegen id : 31]
Left keys [1]: [cs_item_sk#40]
Right keys [1]: [i_item_sk#55]
Join type: Inner
Join condition: None

(144) Project [codegen id : 31]
Output [6]: [cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_id#54]
Input [8]: [cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_id#54, i_item_sk#55]

(145) ReusedExchange [Reuses operator id: 33]
Output [1]: [p_promo_sk#56]

(146) BroadcastHashJoin [codegen id : 31]
Left keys [1]: [cs_promo_sk#41]
Right keys [1]: [p_promo_sk#56]
Join type: Inner
Join condition: None

(147) Project [codegen id : 31]
Output [5]: [cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_id#54]
Input [7]: [cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_id#54, p_promo_sk#56]

(148) HashAggregate [codegen id : 31]
Input [5]: [cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_id#54]
Keys [1]: [cp_catalog_page_id#54]
Functions [3]: [partial_sum(UnscaledValue(cs_ext_sales_price#43)), partial_sum(coalesce(cast(cr_return_amount#49 as decimal(12,2)), 0.00)), partial_sum((cs_net_profit#44 - coalesce(cast(cr_net_loss#50 as decimal(12,2)), 0.00)))]
Aggregate Attributes [5]: [sum#141, sum#142, isEmpty#143, sum#144, isEmpty#145]
Results [6]: [cp_catalog_page_id#54, sum#146, sum#147, isEmpty#148, sum#149, isEmpty#150]

(149) Exchange
Input [6]: [cp_catalog_page_id#54, sum#146, sum#147, isEmpty#148, sum#149, isEmpty#150]
Arguments: hashpartitioning(cp_catalog_page_id#54, 5), ENSURE_REQUIREMENTS, [plan_id=27]

(150) HashAggregate [codegen id : 32]
Input [6]: [cp_catalog_page_id#54, sum#146, sum#147, isEmpty#148, sum#149, isEmpty#150]
Keys [1]: [cp_catalog_page_id#54]
Functions [3]: [sum(UnscaledValue(cs_ext_sales_price#43)), sum(coalesce(cast(cr_return_amount#49 as decimal(12,2)), 0.00)), sum((cs_net_profit#44 - coalesce(cast(cr_net_loss#50 as decimal(12,2)), 0.00)))]
Aggregate Attributes [3]: [sum(UnscaledValue(cs_ext_sales_price#43))#67, sum(coalesce(cast(cr_return_amount#49 as decimal(12,2)), 0.00))#68, sum((cs_net_profit#44 - coalesce(cast(cr_net_loss#50 as decimal(12,2)), 0.00)))#69]
Results [5]: [catalog channel AS channel#70, concat(catalog_page, cp_catalog_page_id#54) AS id#71, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#43))#67,17,2) AS sales#72, sum(coalesce(cast(cr_return_amount#49 as decimal(12,2)), 0.00))#68 AS returns#73, sum((cs_net_profit#44 - coalesce(cast(cr_net_loss#50 as decimal(12,2)), 0.00)))#69 AS profit#74]

(unknown) Scan parquet spark_catalog.default.web_sales
Output [7]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#81), dynamicpruningexpression(ws_sold_date_sk#81 IN dynamicpruning#151)]
PushedFilters: [IsNotNull(ws_web_site_sk), IsNotNull(ws_item_sk), IsNotNull(ws_promo_sk)]
ReadSchema: struct<ws_item_sk:int,ws_web_site_sk:int,ws_promo_sk:int,ws_order_number:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decimal(7,2)>

(152) CometFilter
Input [7]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81]
Condition : ((isnotnull(ws_web_site_sk#76) AND isnotnull(ws_item_sk#75)) AND isnotnull(ws_promo_sk#77))

(153) CometExchange
Input [7]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81]
Arguments: hashpartitioning(ws_item_sk#75, ws_order_number#78, 5), Exchange hashpartitioning(ws_item_sk#75, ws_order_number#78, 5), ENSURE_REQUIREMENTS, [plan_id=28], ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=29]

(154) CometSort
Input [7]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81]
Arguments: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81], [ws_item_sk#75 ASC NULLS FIRST, ws_order_number#78 ASC NULLS FIRST]

(155) ReusedExchange [Reuses operator id: 76]
Output [4]: [wr_item_sk#83, wr_order_number#84, wr_return_amt#85, wr_net_loss#86]

(156) CometSort
Input [4]: [wr_item_sk#83, wr_order_number#84, wr_return_amt#85, wr_net_loss#86]
Arguments: [wr_item_sk#83, wr_order_number#84, wr_return_amt#85, wr_net_loss#86], [wr_item_sk#83 ASC NULLS FIRST, wr_order_number#84 ASC NULLS FIRST]

(157) CometSortMergeJoin
Left output [7]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81]
Right output [4]: [wr_item_sk#83, wr_order_number#84, wr_return_amt#85, wr_net_loss#86]
Arguments: [ws_item_sk#75, ws_order_number#78], [wr_item_sk#83, wr_order_number#84], LeftOuter

(158) CometProject
Input [11]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81, wr_item_sk#83, wr_order_number#84, wr_return_amt#85, wr_net_loss#86]
Arguments: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81, wr_return_amt#85, wr_net_loss#86], [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81, wr_return_amt#85, wr_net_loss#86]

(159) ColumnarToRow [codegen id : 37]
Input [8]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81, wr_return_amt#85, wr_net_loss#86]

(160) ReusedExchange [Reuses operator id: 270]
Output [1]: [d_date_sk#88]

(161) BroadcastHashJoin [codegen id : 37]
Left keys [1]: [ws_sold_date_sk#81]
Right keys [1]: [d_date_sk#88]
Join type: Inner
Join condition: None

(162) Project [codegen id : 37]
Output [7]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86]
Input [9]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81, wr_return_amt#85, wr_net_loss#86, d_date_sk#88]

(163) ReusedExchange [Reuses operator id: 87]
Output [2]: [web_site_sk#89, web_site_id#90]

(164) BroadcastHashJoin [codegen id : 37]
Left keys [1]: [ws_web_site_sk#76]
Right keys [1]: [web_site_sk#89]
Join type: Inner
Join condition: None

(165) Project [codegen id : 37]
Output [7]: [ws_item_sk#75, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_id#90]
Input [9]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_sk#89, web_site_id#90]

(166) ReusedExchange [Reuses operator id: 26]
Output [1]: [i_item_sk#91]

(167) BroadcastHashJoin [codegen id : 37]
Left keys [1]: [ws_item_sk#75]
Right keys [1]: [i_item_sk#91]
Join type: Inner
Join condition: None

(168) Project [codegen id : 37]
Output [6]: [ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_id#90]
Input [8]: [ws_item_sk#75, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_id#90, i_item_sk#91]

(169) ReusedExchange [Reuses operator id: 33]
Output [1]: [p_promo_sk#92]

(170) BroadcastHashJoin [codegen id : 37]
Left keys [1]: [ws_promo_sk#77]
Right keys [1]: [p_promo_sk#92]
Join type: Inner
Join condition: None

(171) Project [codegen id : 37]
Output [5]: [ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_id#90]
Input [7]: [ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_id#90, p_promo_sk#92]

(172) HashAggregate [codegen id : 37]
Input [5]: [ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_id#90]
Keys [1]: [web_site_id#90]
Functions [3]: [partial_sum(UnscaledValue(ws_ext_sales_price#79)), partial_sum(coalesce(cast(wr_return_amt#85 as decimal(12,2)), 0.00)), partial_sum((ws_net_profit#80 - coalesce(cast(wr_net_loss#86 as decimal(12,2)), 0.00)))]
Aggregate Attributes [5]: [sum#152, sum#153, isEmpty#154, sum#155, isEmpty#156]
Results [6]: [web_site_id#90, sum#157, sum#158, isEmpty#159, sum#160, isEmpty#161]

(173) Exchange
Input [6]: [web_site_id#90, sum#157, sum#158, isEmpty#159, sum#160, isEmpty#161]
Arguments: hashpartitioning(web_site_id#90, 5), ENSURE_REQUIREMENTS, [plan_id=30]

(174) HashAggregate [codegen id : 38]
Input [6]: [web_site_id#90, sum#157, sum#158, isEmpty#159, sum#160, isEmpty#161]
Keys [1]: [web_site_id#90]
Functions [3]: [sum(UnscaledValue(ws_ext_sales_price#79)), sum(coalesce(cast(wr_return_amt#85 as decimal(12,2)), 0.00)), sum((ws_net_profit#80 - coalesce(cast(wr_net_loss#86 as decimal(12,2)), 0.00)))]
Aggregate Attributes [3]: [sum(UnscaledValue(ws_ext_sales_price#79))#103, sum(coalesce(cast(wr_return_amt#85 as decimal(12,2)), 0.00))#104, sum((ws_net_profit#80 - coalesce(cast(wr_net_loss#86 as decimal(12,2)), 0.00)))#105]
Results [5]: [web channel AS channel#106, concat(web_site, web_site_id#90) AS id#107, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#79))#103,17,2) AS sales#108, sum(coalesce(cast(wr_return_amt#85 as decimal(12,2)), 0.00))#104 AS returns#109, sum((ws_net_profit#80 - coalesce(cast(wr_net_loss#86 as decimal(12,2)), 0.00)))#105 AS profit#110]

(175) Union

(176) HashAggregate [codegen id : 39]
Input [5]: [channel#34, id#35, sales#36, returns#37, profit#38]
Keys [2]: [channel#34, id#35]
Functions [3]: [partial_sum(sales#36), partial_sum(returns#37), partial_sum(profit#38)]
Aggregate Attributes [6]: [sum#111, isEmpty#112, sum#113, isEmpty#114, sum#115, isEmpty#116]
Results [8]: [channel#34, id#35, sum#117, isEmpty#118, sum#119, isEmpty#120, sum#121, isEmpty#122]

(177) Exchange
Input [8]: [channel#34, id#35, sum#117, isEmpty#118, sum#119, isEmpty#120, sum#121, isEmpty#122]
Arguments: hashpartitioning(channel#34, id#35, 5), ENSURE_REQUIREMENTS, [plan_id=31]

(178) HashAggregate [codegen id : 40]
Input [8]: [channel#34, id#35, sum#117, isEmpty#118, sum#119, isEmpty#120, sum#121, isEmpty#122]
Keys [2]: [channel#34, id#35]
Functions [3]: [sum(sales#36), sum(returns#37), sum(profit#38)]
Aggregate Attributes [3]: [sum(sales#36)#123, sum(returns#37)#124, sum(profit#38)#125]
Results [4]: [channel#34, sum(sales#36)#123 AS sales#162, sum(returns#37)#124 AS returns#163, sum(profit#38)#125 AS profit#164]

(179) HashAggregate [codegen id : 40]
Input [4]: [channel#34, sales#162, returns#163, profit#164]
Keys [1]: [channel#34]
Functions [3]: [partial_sum(sales#162), partial_sum(returns#163), partial_sum(profit#164)]
Aggregate Attributes [6]: [sum#165, isEmpty#166, sum#167, isEmpty#168, sum#169, isEmpty#170]
Results [7]: [channel#34, sum#171, isEmpty#172, sum#173, isEmpty#174, sum#175, isEmpty#176]

(180) Exchange
Input [7]: [channel#34, sum#171, isEmpty#172, sum#173, isEmpty#174, sum#175, isEmpty#176]
Arguments: hashpartitioning(channel#34, 5), ENSURE_REQUIREMENTS, [plan_id=32]

(181) HashAggregate [codegen id : 41]
Input [7]: [channel#34, sum#171, isEmpty#172, sum#173, isEmpty#174, sum#175, isEmpty#176]
Keys [1]: [channel#34]
Functions [3]: [sum(sales#162), sum(returns#163), sum(profit#164)]
Aggregate Attributes [3]: [sum(sales#162)#177, sum(returns#163)#178, sum(profit#164)#179]
Results [5]: [channel#34, null AS id#180, sum(sales#162)#177 AS sales#181, sum(returns#163)#178 AS returns#182, sum(profit#164)#179 AS profit#183]

(unknown) Scan parquet spark_catalog.default.store_sales
Output [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#7), dynamicpruningexpression(ss_sold_date_sk#7 IN dynamicpruning#184)]
PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_item_sk), IsNotNull(ss_promo_sk)]
ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>

(183) CometFilter
Input [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]
Condition : ((isnotnull(ss_store_sk#2) AND isnotnull(ss_item_sk#1)) AND isnotnull(ss_promo_sk#3))

(184) CometExchange
Input [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]
Arguments: hashpartitioning(ss_item_sk#1, ss_ticket_number#4, 5), Exchange hashpartitioning(ss_item_sk#1, ss_ticket_number#4, 5), ENSURE_REQUIREMENTS, [plan_id=33], ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=34]

(185) CometSort
Input [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]
Arguments: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7], [ss_item_sk#1 ASC NULLS FIRST, ss_ticket_number#4 ASC NULLS FIRST]

(186) ReusedExchange [Reuses operator id: 8]
Output [4]: [sr_item_sk#9, sr_ticket_number#10, sr_return_amt#11, sr_net_loss#12]

(187) CometSort
Input [4]: [sr_item_sk#9, sr_ticket_number#10, sr_return_amt#11, sr_net_loss#12]
Arguments: [sr_item_sk#9, sr_ticket_number#10, sr_return_amt#11, sr_net_loss#12], [sr_item_sk#9 ASC NULLS FIRST, sr_ticket_number#10 ASC NULLS FIRST]

(188) CometSortMergeJoin
Left output [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]
Right output [4]: [sr_item_sk#9, sr_ticket_number#10, sr_return_amt#11, sr_net_loss#12]
Arguments: [ss_item_sk#1, ss_ticket_number#4], [sr_item_sk#9, sr_ticket_number#10], LeftOuter

(189) CometProject
Input [11]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7, sr_item_sk#9, sr_ticket_number#10, sr_return_amt#11, sr_net_loss#12]
Arguments: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7, sr_return_amt#11, sr_net_loss#12], [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7, sr_return_amt#11, sr_net_loss#12]

(190) ColumnarToRow [codegen id : 46]
Input [8]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7, sr_return_amt#11, sr_net_loss#12]

(191) ReusedExchange [Reuses operator id: 270]
Output [1]: [d_date_sk#14]

(192) BroadcastHashJoin [codegen id : 46]
Left keys [1]: [ss_sold_date_sk#7]
Right keys [1]: [d_date_sk#14]
Join type: Inner
Join condition: None

(193) Project [codegen id : 46]
Output [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12]
Input [9]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7, sr_return_amt#11, sr_net_loss#12, d_date_sk#14]

(194) ReusedExchange [Reuses operator id: 19]
Output [2]: [s_store_sk#15, s_store_id#16]

(195) BroadcastHashJoin [codegen id : 46]
Left keys [1]: [ss_store_sk#2]
Right keys [1]: [s_store_sk#15]
Join type: Inner
Join condition: None

(196) Project [codegen id : 46]
Output [7]: [ss_item_sk#1, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_id#16]
Input [9]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_sk#15, s_store_id#16]

(197) ReusedExchange [Reuses operator id: 26]
Output [1]: [i_item_sk#17]

(198) BroadcastHashJoin [codegen id : 46]
Left keys [1]: [ss_item_sk#1]
Right keys [1]: [i_item_sk#17]
Join type: Inner
Join condition: None

(199) Project [codegen id : 46]
Output [6]: [ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_id#16]
Input [8]: [ss_item_sk#1, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_id#16, i_item_sk#17]

(200) ReusedExchange [Reuses operator id: 33]
Output [1]: [p_promo_sk#19]

(201) BroadcastHashJoin [codegen id : 46]
Left keys [1]: [ss_promo_sk#3]
Right keys [1]: [p_promo_sk#19]
Join type: Inner
Join condition: None

(202) Project [codegen id : 46]
Output [5]: [ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_id#16]
Input [7]: [ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_id#16, p_promo_sk#19]

(203) HashAggregate [codegen id : 46]
Input [5]: [ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#11, sr_net_loss#12, s_store_id#16]
Keys [1]: [s_store_id#16]
Functions [3]: [partial_sum(UnscaledValue(ss_ext_sales_price#5)), partial_sum(coalesce(cast(sr_return_amt#11 as decimal(12,2)), 0.00)), partial_sum((ss_net_profit#6 - coalesce(cast(sr_net_loss#12 as decimal(12,2)), 0.00)))]
Aggregate Attributes [5]: [sum#185, sum#186, isEmpty#187, sum#188, isEmpty#189]
Results [6]: [s_store_id#16, sum#190, sum#191, isEmpty#192, sum#193, isEmpty#194]

(204) Exchange
Input [6]: [s_store_id#16, sum#190, sum#191, isEmpty#192, sum#193, isEmpty#194]
Arguments: hashpartitioning(s_store_id#16, 5), ENSURE_REQUIREMENTS, [plan_id=35]

(205) HashAggregate [codegen id : 47]
Input [6]: [s_store_id#16, sum#190, sum#191, isEmpty#192, sum#193, isEmpty#194]
Keys [1]: [s_store_id#16]
Functions [3]: [sum(UnscaledValue(ss_ext_sales_price#5)), sum(coalesce(cast(sr_return_amt#11 as decimal(12,2)), 0.00)), sum((ss_net_profit#6 - coalesce(cast(sr_net_loss#12 as decimal(12,2)), 0.00)))]
Aggregate Attributes [3]: [sum(UnscaledValue(ss_ext_sales_price#5))#31, sum(coalesce(cast(sr_return_amt#11 as decimal(12,2)), 0.00))#32, sum((ss_net_profit#6 - coalesce(cast(sr_net_loss#12 as decimal(12,2)), 0.00)))#33]
Results [5]: [store channel AS channel#34, concat(store, s_store_id#16) AS id#35, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#5))#31,17,2) AS sales#36, sum(coalesce(cast(sr_return_amt#11 as decimal(12,2)), 0.00))#32 AS returns#37, sum((ss_net_profit#6 - coalesce(cast(sr_net_loss#12 as decimal(12,2)), 0.00)))#33 AS profit#38]

(unknown) Scan parquet spark_catalog.default.catalog_sales
Output [7]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#45), dynamicpruningexpression(cs_sold_date_sk#45 IN dynamicpruning#195)]
PushedFilters: [IsNotNull(cs_catalog_page_sk), IsNotNull(cs_item_sk), IsNotNull(cs_promo_sk)]
ReadSchema: struct<cs_catalog_page_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:decimal(7,2)>

(207) CometFilter
Input [7]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45]
Condition : ((isnotnull(cs_catalog_page_sk#39) AND isnotnull(cs_item_sk#40)) AND isnotnull(cs_promo_sk#41))

(208) CometExchange
Input [7]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45]
Arguments: hashpartitioning(cs_item_sk#40, cs_order_number#42, 5), Exchange hashpartitioning(cs_item_sk#40, cs_order_number#42, 5), ENSURE_REQUIREMENTS, [plan_id=36], ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=37]

(209) CometSort
Input [7]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45]
Arguments: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45], [cs_item_sk#40 ASC NULLS FIRST, cs_order_number#42 ASC NULLS FIRST]

(210) ReusedExchange [Reuses operator id: 46]
Output [4]: [cr_item_sk#47, cr_order_number#48, cr_return_amount#49, cr_net_loss#50]

(211) CometSort
Input [4]: [cr_item_sk#47, cr_order_number#48, cr_return_amount#49, cr_net_loss#50]
Arguments: [cr_item_sk#47, cr_order_number#48, cr_return_amount#49, cr_net_loss#50], [cr_item_sk#47 ASC NULLS FIRST, cr_order_number#48 ASC NULLS FIRST]

(212) CometSortMergeJoin
Left output [7]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45]
Right output [4]: [cr_item_sk#47, cr_order_number#48, cr_return_amount#49, cr_net_loss#50]
Arguments: [cs_item_sk#40, cs_order_number#42], [cr_item_sk#47, cr_order_number#48], LeftOuter

(213) CometProject
Input [11]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_order_number#42, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45, cr_item_sk#47, cr_order_number#48, cr_return_amount#49, cr_net_loss#50]
Arguments: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45, cr_return_amount#49, cr_net_loss#50], [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45, cr_return_amount#49, cr_net_loss#50]

(214) ColumnarToRow [codegen id : 52]
Input [8]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45, cr_return_amount#49, cr_net_loss#50]

(215) ReusedExchange [Reuses operator id: 270]
Output [1]: [d_date_sk#52]

(216) BroadcastHashJoin [codegen id : 52]
Left keys [1]: [cs_sold_date_sk#45]
Right keys [1]: [d_date_sk#52]
Join type: Inner
Join condition: None

(217) Project [codegen id : 52]
Output [7]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50]
Input [9]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cs_sold_date_sk#45, cr_return_amount#49, cr_net_loss#50, d_date_sk#52]

(218) ReusedExchange [Reuses operator id: 57]
Output [2]: [cp_catalog_page_sk#53, cp_catalog_page_id#54]

(219) BroadcastHashJoin [codegen id : 52]
Left keys [1]: [cs_catalog_page_sk#39]
Right keys [1]: [cp_catalog_page_sk#53]
Join type: Inner
Join condition: None

(220) Project [codegen id : 52]
Output [7]: [cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_id#54]
Input [9]: [cs_catalog_page_sk#39, cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_sk#53, cp_catalog_page_id#54]

(221) ReusedExchange [Reuses operator id: 26]
Output [1]: [i_item_sk#55]

(222) BroadcastHashJoin [codegen id : 52]
Left keys [1]: [cs_item_sk#40]
Right keys [1]: [i_item_sk#55]
Join type: Inner
Join condition: None

(223) Project [codegen id : 52]
Output [6]: [cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_id#54]
Input [8]: [cs_item_sk#40, cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_id#54, i_item_sk#55]

(224) ReusedExchange [Reuses operator id: 33]
Output [1]: [p_promo_sk#56]

(225) BroadcastHashJoin [codegen id : 52]
Left keys [1]: [cs_promo_sk#41]
Right keys [1]: [p_promo_sk#56]
Join type: Inner
Join condition: None

(226) Project [codegen id : 52]
Output [5]: [cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_id#54]
Input [7]: [cs_promo_sk#41, cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_id#54, p_promo_sk#56]

(227) HashAggregate [codegen id : 52]
Input [5]: [cs_ext_sales_price#43, cs_net_profit#44, cr_return_amount#49, cr_net_loss#50, cp_catalog_page_id#54]
Keys [1]: [cp_catalog_page_id#54]
Functions [3]: [partial_sum(UnscaledValue(cs_ext_sales_price#43)), partial_sum(coalesce(cast(cr_return_amount#49 as decimal(12,2)), 0.00)), partial_sum((cs_net_profit#44 - coalesce(cast(cr_net_loss#50 as decimal(12,2)), 0.00)))]
Aggregate Attributes [5]: [sum#196, sum#197, isEmpty#198, sum#199, isEmpty#200]
Results [6]: [cp_catalog_page_id#54, sum#201, sum#202, isEmpty#203, sum#204, isEmpty#205]

(228) Exchange
Input [6]: [cp_catalog_page_id#54, sum#201, sum#202, isEmpty#203, sum#204, isEmpty#205]
Arguments: hashpartitioning(cp_catalog_page_id#54, 5), ENSURE_REQUIREMENTS, [plan_id=38]

(229) HashAggregate [codegen id : 53]
Input [6]: [cp_catalog_page_id#54, sum#201, sum#202, isEmpty#203, sum#204, isEmpty#205]
Keys [1]: [cp_catalog_page_id#54]
Functions [3]: [sum(UnscaledValue(cs_ext_sales_price#43)), sum(coalesce(cast(cr_return_amount#49 as decimal(12,2)), 0.00)), sum((cs_net_profit#44 - coalesce(cast(cr_net_loss#50 as decimal(12,2)), 0.00)))]
Aggregate Attributes [3]: [sum(UnscaledValue(cs_ext_sales_price#43))#67, sum(coalesce(cast(cr_return_amount#49 as decimal(12,2)), 0.00))#68, sum((cs_net_profit#44 - coalesce(cast(cr_net_loss#50 as decimal(12,2)), 0.00)))#69]
Results [5]: [catalog channel AS channel#70, concat(catalog_page, cp_catalog_page_id#54) AS id#71, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#43))#67,17,2) AS sales#72, sum(coalesce(cast(cr_return_amount#49 as decimal(12,2)), 0.00))#68 AS returns#73, sum((cs_net_profit#44 - coalesce(cast(cr_net_loss#50 as decimal(12,2)), 0.00)))#69 AS profit#74]

(unknown) Scan parquet spark_catalog.default.web_sales
Output [7]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#81), dynamicpruningexpression(ws_sold_date_sk#81 IN dynamicpruning#206)]
PushedFilters: [IsNotNull(ws_web_site_sk), IsNotNull(ws_item_sk), IsNotNull(ws_promo_sk)]
ReadSchema: struct<ws_item_sk:int,ws_web_site_sk:int,ws_promo_sk:int,ws_order_number:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decimal(7,2)>

(231) CometFilter
Input [7]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81]
Condition : ((isnotnull(ws_web_site_sk#76) AND isnotnull(ws_item_sk#75)) AND isnotnull(ws_promo_sk#77))

(232) CometExchange
Input [7]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81]
Arguments: hashpartitioning(ws_item_sk#75, ws_order_number#78, 5), Exchange hashpartitioning(ws_item_sk#75, ws_order_number#78, 5), ENSURE_REQUIREMENTS, [plan_id=39], ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=40]

(233) CometSort
Input [7]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81]
Arguments: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81], [ws_item_sk#75 ASC NULLS FIRST, ws_order_number#78 ASC NULLS FIRST]

(234) ReusedExchange [Reuses operator id: 76]
Output [4]: [wr_item_sk#83, wr_order_number#84, wr_return_amt#85, wr_net_loss#86]

(235) CometSort
Input [4]: [wr_item_sk#83, wr_order_number#84, wr_return_amt#85, wr_net_loss#86]
Arguments: [wr_item_sk#83, wr_order_number#84, wr_return_amt#85, wr_net_loss#86], [wr_item_sk#83 ASC NULLS FIRST, wr_order_number#84 ASC NULLS FIRST]

(236) CometSortMergeJoin
Left output [7]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81]
Right output [4]: [wr_item_sk#83, wr_order_number#84, wr_return_amt#85, wr_net_loss#86]
Arguments: [ws_item_sk#75, ws_order_number#78], [wr_item_sk#83, wr_order_number#84], LeftOuter

(237) CometProject
Input [11]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_order_number#78, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81, wr_item_sk#83, wr_order_number#84, wr_return_amt#85, wr_net_loss#86]
Arguments: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81, wr_return_amt#85, wr_net_loss#86], [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81, wr_return_amt#85, wr_net_loss#86]

(238) ColumnarToRow [codegen id : 58]
Input [8]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81, wr_return_amt#85, wr_net_loss#86]

(239) ReusedExchange [Reuses operator id: 270]
Output [1]: [d_date_sk#88]

(240) BroadcastHashJoin [codegen id : 58]
Left keys [1]: [ws_sold_date_sk#81]
Right keys [1]: [d_date_sk#88]
Join type: Inner
Join condition: None

(241) Project [codegen id : 58]
Output [7]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86]
Input [9]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, ws_sold_date_sk#81, wr_return_amt#85, wr_net_loss#86, d_date_sk#88]

(242) ReusedExchange [Reuses operator id: 87]
Output [2]: [web_site_sk#89, web_site_id#90]

(243) BroadcastHashJoin [codegen id : 58]
Left keys [1]: [ws_web_site_sk#76]
Right keys [1]: [web_site_sk#89]
Join type: Inner
Join condition: None

(244) Project [codegen id : 58]
Output [7]: [ws_item_sk#75, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_id#90]
Input [9]: [ws_item_sk#75, ws_web_site_sk#76, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_sk#89, web_site_id#90]

(245) ReusedExchange [Reuses operator id: 26]
Output [1]: [i_item_sk#91]

(246) BroadcastHashJoin [codegen id : 58]
Left keys [1]: [ws_item_sk#75]
Right keys [1]: [i_item_sk#91]
Join type: Inner
Join condition: None

(247) Project [codegen id : 58]
Output [6]: [ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_id#90]
Input [8]: [ws_item_sk#75, ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_id#90, i_item_sk#91]

(248) ReusedExchange [Reuses operator id: 33]
Output [1]: [p_promo_sk#92]

(249) BroadcastHashJoin [codegen id : 58]
Left keys [1]: [ws_promo_sk#77]
Right keys [1]: [p_promo_sk#92]
Join type: Inner
Join condition: None

(250) Project [codegen id : 58]
Output [5]: [ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_id#90]
Input [7]: [ws_promo_sk#77, ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_id#90, p_promo_sk#92]

(251) HashAggregate [codegen id : 58]
Input [5]: [ws_ext_sales_price#79, ws_net_profit#80, wr_return_amt#85, wr_net_loss#86, web_site_id#90]
Keys [1]: [web_site_id#90]
Functions [3]: [partial_sum(UnscaledValue(ws_ext_sales_price#79)), partial_sum(coalesce(cast(wr_return_amt#85 as decimal(12,2)), 0.00)), partial_sum((ws_net_profit#80 - coalesce(cast(wr_net_loss#86 as decimal(12,2)), 0.00)))]
Aggregate Attributes [5]: [sum#207, sum#208, isEmpty#209, sum#210, isEmpty#211]
Results [6]: [web_site_id#90, sum#212, sum#213, isEmpty#214, sum#215, isEmpty#216]

(252) Exchange
Input [6]: [web_site_id#90, sum#212, sum#213, isEmpty#214, sum#215, isEmpty#216]
Arguments: hashpartitioning(web_site_id#90, 5), ENSURE_REQUIREMENTS, [plan_id=41]

(253) HashAggregate [codegen id : 59]
Input [6]: [web_site_id#90, sum#212, sum#213, isEmpty#214, sum#215, isEmpty#216]
Keys [1]: [web_site_id#90]
Functions [3]: [sum(UnscaledValue(ws_ext_sales_price#79)), sum(coalesce(cast(wr_return_amt#85 as decimal(12,2)), 0.00)), sum((ws_net_profit#80 - coalesce(cast(wr_net_loss#86 as decimal(12,2)), 0.00)))]
Aggregate Attributes [3]: [sum(UnscaledValue(ws_ext_sales_price#79))#103, sum(coalesce(cast(wr_return_amt#85 as decimal(12,2)), 0.00))#104, sum((ws_net_profit#80 - coalesce(cast(wr_net_loss#86 as decimal(12,2)), 0.00)))#105]
Results [5]: [web channel AS channel#106, concat(web_site, web_site_id#90) AS id#107, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#79))#103,17,2) AS sales#108, sum(coalesce(cast(wr_return_amt#85 as decimal(12,2)), 0.00))#104 AS returns#109, sum((ws_net_profit#80 - coalesce(cast(wr_net_loss#86 as decimal(12,2)), 0.00)))#105 AS profit#110]

(254) Union

(255) HashAggregate [codegen id : 60]
Input [5]: [channel#34, id#35, sales#36, returns#37, profit#38]
Keys [2]: [channel#34, id#35]
Functions [3]: [partial_sum(sales#36), partial_sum(returns#37), partial_sum(profit#38)]
Aggregate Attributes [6]: [sum#111, isEmpty#112, sum#113, isEmpty#114, sum#115, isEmpty#116]
Results [8]: [channel#34, id#35, sum#117, isEmpty#118, sum#119, isEmpty#120, sum#121, isEmpty#122]

(256) Exchange
Input [8]: [channel#34, id#35, sum#117, isEmpty#118, sum#119, isEmpty#120, sum#121, isEmpty#122]
Arguments: hashpartitioning(channel#34, id#35, 5), ENSURE_REQUIREMENTS, [plan_id=42]

(257) HashAggregate [codegen id : 61]
Input [8]: [channel#34, id#35, sum#117, isEmpty#118, sum#119, isEmpty#120, sum#121, isEmpty#122]
Keys [2]: [channel#34, id#35]
Functions [3]: [sum(sales#36), sum(returns#37), sum(profit#38)]
Aggregate Attributes [3]: [sum(sales#36)#123, sum(returns#37)#124, sum(profit#38)#125]
Results [3]: [sum(sales#36)#123 AS sales#162, sum(returns#37)#124 AS returns#163, sum(profit#38)#125 AS profit#164]

(258) HashAggregate [codegen id : 61]
Input [3]: [sales#162, returns#163, profit#164]
Keys: []
Functions [3]: [partial_sum(sales#162), partial_sum(returns#163), partial_sum(profit#164)]
Aggregate Attributes [6]: [sum#217, isEmpty#218, sum#219, isEmpty#220, sum#221, isEmpty#222]
Results [6]: [sum#223, isEmpty#224, sum#225, isEmpty#226, sum#227, isEmpty#228]

(259) Exchange
Input [6]: [sum#223, isEmpty#224, sum#225, isEmpty#226, sum#227, isEmpty#228]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=43]

(260) HashAggregate [codegen id : 62]
Input [6]: [sum#223, isEmpty#224, sum#225, isEmpty#226, sum#227, isEmpty#228]
Keys: []
Functions [3]: [sum(sales#162), sum(returns#163), sum(profit#164)]
Aggregate Attributes [3]: [sum(sales#162)#229, sum(returns#163)#230, sum(profit#164)#231]
Results [5]: [null AS channel#232, null AS id#233, sum(sales#162)#229 AS sales#234, sum(returns#163)#230 AS returns#235, sum(profit#164)#231 AS profit#236]

(261) Union

(262) HashAggregate [codegen id : 63]
Input [5]: [channel#34, id#35, sales#126, returns#127, profit#128]
Keys [5]: [channel#34, id#35, sales#126, returns#127, profit#128]
Functions: []
Aggregate Attributes: []
Results [5]: [channel#34, id#35, sales#126, returns#127, profit#128]

(263) Exchange
Input [5]: [channel#34, id#35, sales#126, returns#127, profit#128]
Arguments: hashpartitioning(channel#34, id#35, sales#126, returns#127, profit#128, 5), ENSURE_REQUIREMENTS, [plan_id=44]

(264) HashAggregate [codegen id : 64]
Input [5]: [channel#34, id#35, sales#126, returns#127, profit#128]
Keys [5]: [channel#34, id#35, sales#126, returns#127, profit#128]
Functions: []
Aggregate Attributes: []
Results [5]: [channel#34, id#35, sales#126, returns#127, profit#128]

(265) TakeOrderedAndProject
Input [5]: [channel#34, id#35, sales#126, returns#127, profit#128]
Arguments: 100, [channel#34 ASC NULLS FIRST, id#35 ASC NULLS FIRST], [channel#34, id#35, sales#126, returns#127, profit#128]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#7 IN dynamicpruning#8
BroadcastExchange (270)
+- * ColumnarToRow (269)
   +- CometProject (268)
      +- CometFilter (267)
         +- CometScan parquet spark_catalog.default.date_dim (266)


(unknown) Scan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#14, d_date#237]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1998-08-04), LessThanOrEqual(d_date,1998-09-03), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(267) CometFilter
Input [2]: [d_date_sk#14, d_date#237]
Condition : (((isnotnull(d_date#237) AND (d_date#237 >= 1998-08-04)) AND (d_date#237 <= 1998-09-03)) AND isnotnull(d_date_sk#14))

(268) CometProject
Input [2]: [d_date_sk#14, d_date#237]
Arguments: [d_date_sk#14], [d_date_sk#14]

(269) ColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#14]

(270) BroadcastExchange
Input [1]: [d_date_sk#14]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=45]

Subquery:2 Hosting operator id = 39 Hosting Expression = cs_sold_date_sk#45 IN dynamicpruning#8

Subquery:3 Hosting operator id = 69 Hosting Expression = ws_sold_date_sk#81 IN dynamicpruning#8

Subquery:4 Hosting operator id = 103 Hosting Expression = ss_sold_date_sk#7 IN dynamicpruning#8

Subquery:5 Hosting operator id = 127 Hosting Expression = cs_sold_date_sk#45 IN dynamicpruning#8

Subquery:6 Hosting operator id = 151 Hosting Expression = ws_sold_date_sk#81 IN dynamicpruning#8

Subquery:7 Hosting operator id = 182 Hosting Expression = ss_sold_date_sk#7 IN dynamicpruning#8

Subquery:8 Hosting operator id = 206 Hosting Expression = cs_sold_date_sk#45 IN dynamicpruning#8

Subquery:9 Hosting operator id = 230 Hosting Expression = ws_sold_date_sk#81 IN dynamicpruning#8


