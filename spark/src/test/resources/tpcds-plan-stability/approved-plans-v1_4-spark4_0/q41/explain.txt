== Physical Plan ==
TakeOrderedAndProject (20)
+- * HashAggregate (19)
   +- Exchange (18)
      +- * HashAggregate (17)
         +- * Project (16)
            +- * BroadcastHashJoin Inner BuildRight (15)
               :- * ColumnarToRow (4)
               :  +- CometProject (3)
               :     +- CometFilter (2)
               :        +- CometScan parquet spark_catalog.default.item (1)
               +- BroadcastExchange (14)
                  +- * Project (13)
                     +- * Filter (12)
                        +- * HashAggregate (11)
                           +- Exchange (10)
                              +- * HashAggregate (9)
                                 +- * Project (8)
                                    +- * Filter (7)
                                       +- * ColumnarToRow (6)
                                          +- CometScan parquet spark_catalog.default.item (5)


(1) Scan parquet spark_catalog.default.item
Output [3]: [i_manufact_id#1, i_manufact#2, i_product_name#3]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_manufact_id), GreaterThanOrEqual(i_manufact_id,738), LessThanOrEqual(i_manufact_id,778), IsNotNull(i_manufact)]
ReadSchema: struct<i_manufact_id:int,i_manufact:string,i_product_name:string>

(2) CometFilter
Input [3]: [i_manufact_id#1, i_manufact#2, i_product_name#3]
Condition : (((isnotnull(i_manufact_id#1) AND (i_manufact_id#1 >= 738)) AND (i_manufact_id#1 <= 778)) AND isnotnull(i_manufact#2))

(3) CometProject
Input [3]: [i_manufact_id#1, i_manufact#2, i_product_name#3]
Arguments: [i_manufact#2, i_product_name#3], [i_manufact#2, i_product_name#3]

(4) ColumnarToRow [codegen id : 3]
Input [2]: [i_manufact#2, i_product_name#3]

(5) Scan parquet spark_catalog.default.item
Output [5]: [i_category#4, i_manufact#5, i_size#6, i_color#7, i_units#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_manufact)]
ReadSchema: struct<i_category:string,i_manufact:string,i_size:string,i_color:string,i_units:string>

(6) ColumnarToRow [codegen id : 1]
Input [5]: [i_category#4, i_manufact#5, i_size#6, i_color#7, i_units#8]

(7) Filter [codegen id : 1]
Input [5]: [i_category#4, i_manufact#5, i_size#6, i_color#7, i_units#8]
Condition : (((((rpad(i_category#4, 50,  ) = Women                                             ) AND (((((rpad(i_color#7, 20,  ) = powder              ) OR (rpad(i_color#7, 20,  ) = khaki               )) AND ((rpad(i_units#8, 10,  ) = Ounce     ) OR (rpad(i_units#8, 10,  ) = Oz        ))) AND ((rpad(i_size#6, 20,  ) = medium              ) OR (rpad(i_size#6, 20,  ) = extra large         ))) OR ((((rpad(i_color#7, 20,  ) = brown               ) OR (rpad(i_color#7, 20,  ) = honeydew            )) AND ((rpad(i_units#8, 10,  ) = Bunch     ) OR (rpad(i_units#8, 10,  ) = Ton       ))) AND ((rpad(i_size#6, 20,  ) = N/A                 ) OR (rpad(i_size#6, 20,  ) = small               ))))) OR ((rpad(i_category#4, 50,  ) = Men                                               ) AND (((((rpad(i_color#7, 20,  ) = floral              ) OR (rpad(i_color#7, 20,  ) = deep                )) AND ((rpad(i_units#8, 10,  ) = N/A       ) OR (rpad(i_units#8, 10,  ) = Dozen     ))) AND ((rpad(i_size#6, 20,  ) = petite              ) OR (rpad(i_size#6, 20,  ) = large               ))) OR ((((rpad(i_color#7, 20,  ) = light               ) OR (rpad(i_color#7, 20,  ) = cornflower          )) AND ((rpad(i_units#8, 10,  ) = Box       ) OR (rpad(i_units#8, 10,  ) = Pound     ))) AND ((rpad(i_size#6, 20,  ) = medium              ) OR (rpad(i_size#6, 20,  ) = extra large         )))))) OR (((rpad(i_category#4, 50,  ) = Women                                             ) AND (((((rpad(i_color#7, 20,  ) = midnight            ) OR (rpad(i_color#7, 20,  ) = snow                )) AND ((rpad(i_units#8, 10,  ) = Pallet    ) OR (rpad(i_units#8, 10,  ) = Gross     ))) AND ((rpad(i_size#6, 20,  ) = medium              ) OR (rpad(i_size#6, 20,  ) = extra large         ))) OR ((((rpad(i_color#7, 20,  ) = cyan                ) OR (rpad(i_color#7, 20,  ) = papaya              )) AND ((rpad(i_units#8, 10,  ) = Cup       ) OR (rpad(i_units#8, 10,  ) = Dram      ))) AND ((rpad(i_size#6, 20,  ) = N/A                 ) OR (rpad(i_size#6, 20,  ) = small               ))))) OR ((rpad(i_category#4, 50,  ) = Men                                               ) AND (((((rpad(i_color#7, 20,  ) = orange              ) OR (rpad(i_color#7, 20,  ) = frosted             )) AND ((rpad(i_units#8, 10,  ) = Each      ) OR (rpad(i_units#8, 10,  ) = Tbl       ))) AND ((rpad(i_size#6, 20,  ) = petite              ) OR (rpad(i_size#6, 20,  ) = large               ))) OR ((((rpad(i_color#7, 20,  ) = forest              ) OR (rpad(i_color#7, 20,  ) = ghost               )) AND ((rpad(i_units#8, 10,  ) = Lb        ) OR (rpad(i_units#8, 10,  ) = Bundle    ))) AND ((rpad(i_size#6, 20,  ) = medium              ) OR (rpad(i_size#6, 20,  ) = extra large         ))))))) AND isnotnull(i_manufact#5))

(8) Project [codegen id : 1]
Output [1]: [i_manufact#5]
Input [5]: [i_category#4, i_manufact#5, i_size#6, i_color#7, i_units#8]

(9) HashAggregate [codegen id : 1]
Input [1]: [i_manufact#5]
Keys [1]: [i_manufact#5]
Functions [1]: [partial_count(1)]
Aggregate Attributes [1]: [count#9]
Results [2]: [i_manufact#5, count#10]

(10) Exchange
Input [2]: [i_manufact#5, count#10]
Arguments: hashpartitioning(i_manufact#5, 5), ENSURE_REQUIREMENTS, [plan_id=1]

(11) HashAggregate [codegen id : 2]
Input [2]: [i_manufact#5, count#10]
Keys [1]: [i_manufact#5]
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#11]
Results [2]: [count(1)#11 AS item_cnt#12, i_manufact#5]

(12) Filter [codegen id : 2]
Input [2]: [item_cnt#12, i_manufact#5]
Condition : (item_cnt#12 > 0)

(13) Project [codegen id : 2]
Output [1]: [i_manufact#5]
Input [2]: [item_cnt#12, i_manufact#5]

(14) BroadcastExchange
Input [1]: [i_manufact#5]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=2]

(15) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [i_manufact#2]
Right keys [1]: [i_manufact#5]
Join type: Inner
Join condition: None

(16) Project [codegen id : 3]
Output [1]: [i_product_name#3]
Input [3]: [i_manufact#2, i_product_name#3, i_manufact#5]

(17) HashAggregate [codegen id : 3]
Input [1]: [i_product_name#3]
Keys [1]: [i_product_name#3]
Functions: []
Aggregate Attributes: []
Results [1]: [i_product_name#3]

(18) Exchange
Input [1]: [i_product_name#3]
Arguments: hashpartitioning(i_product_name#3, 5), ENSURE_REQUIREMENTS, [plan_id=3]

(19) HashAggregate [codegen id : 4]
Input [1]: [i_product_name#3]
Keys [1]: [i_product_name#3]
Functions: []
Aggregate Attributes: []
Results [1]: [i_product_name#3]

(20) TakeOrderedAndProject
Input [1]: [i_product_name#3]
Arguments: 100, [i_product_name#3 ASC NULLS FIRST], [i_product_name#3]

